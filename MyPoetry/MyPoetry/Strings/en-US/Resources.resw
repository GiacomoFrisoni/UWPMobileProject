<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlreadyHaveAccount.Content" xml:space="preserve">
    <value>Already have an account?</value>
  </data>
  <data name="Back.Content" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Checking" xml:space="preserve">
    <value>Checking</value>
  </data>
  <data name="CheckingText" xml:space="preserve">
    <value>Looking if your code is correct. Please wait...</value>
  </data>
  <data name="CodeNotReceived.Content" xml:space="preserve">
    <value>My code isn't arrived yet</value>
  </data>
  <data name="CodeRequestMessage" xml:space="preserve">
    <value>We sent you another verification code at your mail. Please wait for it some more time before you reuse this function.</value>
  </data>
  <data name="ConfirmText.Text" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="Delete.Text" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Email.Text" xml:space="preserve">
    <value>Your mail adress</value>
  </data>
  <data name="EmailOfAccount.Text" xml:space="preserve">
    <value>Email of your account</value>
  </data>
  <data name="EmailPH.PlaceholderText" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailSent" xml:space="preserve">
    <value>Email sent</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Err_InvalidCode" xml:space="preserve">
    <value>The code is invalid</value>
  </data>
  <data name="Err_InvalidEmail" xml:space="preserve">
    <value>Please supply a valid email address</value>
  </data>
  <data name="Err_InvalidGender" xml:space="preserve">
    <value>Invalid gender (1 char required)</value>
  </data>
  <data name="Err_InvalidPw" xml:space="preserve">
    <value>Invalid password (at least 8 chars required)</value>
  </data>
  <data name="Err_InvalidPws" xml:space="preserve">
    <value>Confirmed password is not equals to the first one</value>
  </data>
  <data name="Err_InvalidUsername" xml:space="preserve">
    <value>That username already exists</value>
  </data>
  <data name="Err_InvalidUsernamePw" xml:space="preserve">
    <value>Invalid username or password</value>
  </data>
  <data name="Err_MissingData" xml:space="preserve">
    <value>Missing Data</value>
  </data>
  <data name="Err_NotAssociatedEmail" xml:space="preserve">
    <value>The email address provided is not associated to any account</value>
  </data>
  <data name="Female.Content" xml:space="preserve">
    <value>Female</value>
  </data>
  <data name="File.Text" xml:space="preserve">
    <value>Choose file</value>
  </data>
  <data name="ForgetPassword.Content" xml:space="preserve">
    <value>Forget password?</value>
  </data>
  <data name="ForgetPasswordText.Text" xml:space="preserve">
    <value>Recover password</value>
  </data>
  <data name="Gender.Text" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="GenderPH.PlaceholderText" xml:space="preserve">
    <value>Select your gender</value>
  </data>
  <data name="GeneratedCodeInfo.Text" xml:space="preserve">
    <value>We sent you a verification code at your mail. Please wait and in case check your SPAM folder.</value>
  </data>
  <data name="GeneratedCodePH.PlaceholderText" xml:space="preserve">
    <value>Input here your code</value>
  </data>
  <data name="Login.Content" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginInProgress" xml:space="preserve">
    <value>Login in progress</value>
  </data>
  <data name="LoginText.Text" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Male.Content" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="Name.Text" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NamePH.PlaceholderText" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="Password.Text" xml:space="preserve">
    <value>Insert password</value>
  </data>
  <data name="PasswordPH.PlaceholderText" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordRecoveryMessage" xml:space="preserve">
    <value>We've sent an email to your address. Follow the instructions provided to complete the password recovery.</value>
  </data>
  <data name="Photo.Text" xml:space="preserve">
    <value>Camera</value>
  </data>
  <data name="Read" xml:space="preserve">
    <value>Read</value>
  </data>
  <data name="RecoverPassword.Content" xml:space="preserve">
    <value>Recover password</value>
  </data>
  <data name="RecoveryInProgress" xml:space="preserve">
    <value>Password Recovery</value>
  </data>
  <data name="Register.Content" xml:space="preserve">
    <value>Register now</value>
  </data>
  <data name="RegisterMessage" xml:space="preserve">
    <value>We're currently registering your account. Please wait.</value>
  </data>
  <data name="RegisterNow.Content" xml:space="preserve">
    <value>Register now</value>
  </data>
  <data name="RegisterPlainText" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RegisterSuccessful" xml:space="preserve">
    <value>Successfull!</value>
  </data>
  <data name="RegisterSuccessfulMessage" xml:space="preserve">
    <value>Horray! Your account has been registered. Now you can login with your credentials.</value>
  </data>
  <data name="RegisterText.Text" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RepeatPassword.Text" xml:space="preserve">
    <value>Repeat Password</value>
  </data>
  <data name="ServerConnection" xml:space="preserve">
    <value>I'm connecting to the server... Wait while i'm loading your data</value>
  </data>
  <data name="Share" xml:space="preserve">
    <value>Share</value>
  </data>
  <data name="StartNow.Content" xml:space="preserve">
    <value>Start now</value>
  </data>
  <data name="StayLogged.Content" xml:space="preserve">
    <value>Auto-login</value>
  </data>
  <data name="Surname.Text" xml:space="preserve">
    <value>Surname</value>
  </data>
  <data name="SurnamePH.PlaceholderText" xml:space="preserve">
    <value>Surname</value>
  </data>
  <data name="Write" xml:space="preserve">
    <value>Write</value>
  </data>
  <data name="Err_WrongCode" xml:space="preserve">
    <value>The specified activation code is not correct</value>
  </data>
  <data name="CodeGenerationInProgress" xml:space="preserve">
    <value>Code generation</value>
  </data>
  <data name="Wait" xml:space="preserve">
    <value>Wait a few moments</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="NewPoetryConfirm" xml:space="preserve">
    <value>Are you sure you want to add the poetry to your notebook?</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="PoetryAdded" xml:space="preserve">
    <value>The poetry has been added to your notebook.</value>
  </data>
  <data name="PoetryUpdated" xml:space="preserve">
    <value>The poetry has been updated. Check your notebook.</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SavingPoetry" xml:space="preserve">
    <value>Saving</value>
  </data>
  <data name="SavingPoetryMessage" xml:space="preserve">
    <value>We're saving your new poetry. Please wait...</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="UpdatePoetryConfirm" xml:space="preserve">
    <value>There is already a poetry with this name. Do you want to save your changes?</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="MyPoetries" xml:space="preserve">
    <value>My poetries</value>
  </data>
  <data name="NewPoetry" xml:space="preserve">
    <value>New poetry</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
</root>